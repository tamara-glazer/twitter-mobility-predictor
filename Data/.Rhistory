# Cluster SEs on state and make significance labels
model.4.nyt.coef <- tidy(coeftest(model.4.nyt, vcov=vcovHC(model.4.nyt, type="sss", cluster="group"))) %>%
mutate(significance = ' ',
significance = ifelse(abs(estimate/std.error) >= qnorm(0.95), '.', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.975), '*', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.995), '**', significance))
# Report coefs and SEs
model.4.nyt.coef %>%
mutate(day = as.numeric(str_sub(term, start=2L))) %>%
filter(day > -2) %>%
select(-day)
View(final.7)
test <- final.d7 %>% group_by(x) %>% summarize(y7.mean = mean(y7, na.rm=TRUE))
View(test)
test <- final.d7 %>% mutate(days = as.numeric(x)) %>%  group_by(days) %>% summarize(y7.mean = mean(y7, na.rm=TRUE))
View(test)
# Now: d = 7
# We can't have any NA/NaN/Inf values in y
final.d7 <- final.prepped %>%
filter(!is.na(y7) & !is.nan(y7) & !is.infinite(y7)) %>%
filter(date <= as.Date("04-30-2020", "%m-%d-%Y")) %>%
select(state_code, date, y7, x, days_since)
test <- final.d7 %>% group_by(days_since) %>% summarize(mean_y7 = mean(y7))
# Repeat figure 2B replication assuming d=7
# First plot: growth rate of active infections (percentage points) using UChicago data
final.prepped %>%
select(state, days_since, case_count, lag7) %>%
mutate(lag7 = ifelse(is.na(lag7), 0, lag7),
active = case_count - lag7) %>%
group_by(days_since) %>%
summarize(total_active = sum(active, na.rm=TRUE)) %>%
ungroup() %>%
mutate(prev_day = dplyr::lag(total_active, n=1L),
daily_growth = 100*(total_active-prev_day)/prev_day) %>%
filter(!is.na(daily_growth)) %>%
filter(days_since >= -40 & days_since <= 40) %>%
# Filter out 2 outlier days that throw off plot scale
filter(daily_growth < 100 & daily_growth > -50) %>%
ggplot(.) +
geom_smooth(aes(x=days_since, y=daily_growth)) +
geom_point(aes(x=days_since, y=daily_growth), color="darkorange") +
geom_vline(xintercept=0, linetype="dashed") +
labs(title="Figure 2B replication: daily mean growth in active cases",
subtitle="By day relative to shelter-in-place effective date, using UChicago case data, assuming d = 7",
x="Days since stay-at-home", y="Growth Rate of Active Infections (Percentage Points)")
# Using NYT data
final.prepped %>%
select(state, days_since, nyt_case_count, nyt.lag7) %>%
mutate(nyt.lag7 = ifelse(is.na(nyt.lag7), 0, nyt.lag7),
active = nyt_case_count - nyt.lag7) %>%
group_by(days_since) %>%
summarize(total_active = sum(active, na.rm=TRUE)) %>%
ungroup() %>%
mutate(prev_day = dplyr::lag(total_active, n=1L),
daily_growth = 100*(total_active-prev_day)/prev_day) %>%
filter(!is.na(daily_growth)) %>%
filter(days_since >= -40 & days_since <= 40) %>%
ggplot(.) +
geom_smooth(aes(x=days_since, y=daily_growth)) +
geom_point(aes(x=days_since, y=daily_growth), color="darkorange") +
geom_vline(xintercept=0, linetype="dashed") +
labs(title="Figure 2B replication: daily mean growth in active cases",
subtitle="By day relative to shelter-in-place effective date, using NYT case data, assuming d = 7",
x="Days since stay-at-home", y="Growth Rate of Active Infections (Percentage Points)")
final.prepped %>%
select(state, days_since, y14) %>%
group_by(days_since) %>%
summarize(daily_growth = mean(y14, na.rm=TRUE)) %>%
ungroup() %>%
filter(!is.na(daily_growth)) %>%
filter(days_since >= -40 & days_since <= 40) %>%
# Filter out 2 outlier days that throw off plot scale
filter(daily_growth < 100 & daily_growth > -50) %>%
ggplot(.) +
geom_smooth(aes(x=days_since, y=daily_growth)) +
geom_point(aes(x=days_since, y=daily_growth), color="darkorange") +
geom_vline(xintercept=0, linetype="dashed") +
labs(title="Figure 2B replication: daily mean growth in active cases",
subtitle="By day relative to shelter-in-place effective date, using UChicago case data, assuming d = 14",
x="Days since stay-at-home", y="Growth Rate of Active Infections (Percentage Points)")
final.prepped %>%
select(state, days_since, y14) %>%
group_by(days_since) %>%
summarize(daily_growth = mean(y14, na.rm=TRUE)) %>%
ungroup() %>%
filter(!is.na(daily_growth)) %>%
filter(days_since >= -40 & days_since <= 40) %>%
ggplot(.) +
geom_smooth(aes(x=days_since, y=daily_growth)) +
geom_point(aes(x=days_since, y=daily_growth), color="darkorange") +
geom_vline(xintercept=0, linetype="dashed") +
labs(title="Figure 2B replication: daily mean growth in active cases",
subtitle="By day relative to shelter-in-place effective date, using UChicago case data, assuming d = 14",
x="Days since stay-at-home", y="Growth Rate of Active Infections (Percentage Points)")
View(final.prepped)
names(final.prepped)
# First plot: growth rate of active infections (percentage points) using UChicago data
final.prepped %>%
select(state, days_since, y14) %>%
group_by(days_since) %>%
summarize(daily_growth = mean(y14, na.rm=TRUE)) %>%
ungroup() %>%
filter(!is.na(daily_growth)) %>%
filter(days_since >= -40 & days_since <= 40) %>%
ggplot(.) +
geom_smooth(aes(x=days_since, y=daily_growth)) +
geom_point(aes(x=days_since, y=daily_growth), color="darkorange") +
geom_vline(xintercept=0, linetype="dashed") +
labs(title="Figure 2B replication: daily mean growth in active cases",
subtitle="By day relative to shelter-in-place effective date, using UChicago case data, assuming d = 14",
x="Days since stay-at-home", y="Growth Rate of Active Infections (Percentage Points)")
# Using NYT data
final.prepped %>%
select(state, days_since, nyt.y14) %>%
group_by(days_since) %>%
summarize(daily_growth = mean(nyt.y14, na.rm=TRUE)) %>%
ungroup() %>%
filter(!is.na(daily_growth)) %>%
filter(days_since >= -40 & days_since <= 40) %>%
ggplot(.) +
geom_smooth(aes(x=days_since, y=daily_growth)) +
geom_point(aes(x=days_since, y=daily_growth), color="darkorange") +
geom_vline(xintercept=0, linetype="dashed") +
labs(title="Figure 2B replication: daily mean growth in active cases",
subtitle="By day relative to shelter-in-place effective date, using NYT case data, assuming d = 14",
x="Days since stay-at-home", y="Growth Rate of Active Infections (Percentage Points)")
### STEP 4: REPRODUCE PLOTS
# First plot: growth rate of active infections (percentage points) using UChicago data
final.prepped %>%
select(state, date, case_count, y14) %>%
group_by(date) %>%
summarize(daily_growth = mean(y14, na.rm=TRUE)) %>%
ungroup() %>%
filter(!is.na(daily_growth)) %>%
filter(date >= base::as.Date("03-01-2020", "%m-%d-%Y") & date <= base::as.Date("04-30-2020", "%m-%d-%Y")) %>%
ggplot(.) +
geom_smooth(aes(x=date, y=daily_growth)) +
geom_point(aes(x=date, y=daily_growth), color="darkorange") +
labs(title="Figure 2A replication: daily mean growth in active cases",
subtitle="By date, using UChicago case data, assuming d = 14",
x="Date", y="Growth Rate of Active Infections (Percentage Points)")
# Using NYT data
final.prepped %>%
select(state, date, nyt.y14) %>%
group_by(date) %>%
summarize(daily_growth = mean(nyt.y14, na.rm=TRUE)) %>%
ungroup() %>%
filter(!is.na(daily_growth)) %>%
filter(date >= base::as.Date("03-01-2020", "%m-%d-%Y") & date <= base::as.Date("04-30-2020", "%m-%d-%Y")) %>%
ggplot(.) +
geom_smooth(aes(x=date, y=daily_growth)) +
geom_point(aes(x=date, y=daily_growth), color="darkorange") +
labs(title="Figure 2A replication: daily mean growth in active cases",
subtitle="By date, using NYT case data, assuming d = 14",
x="Date", y="Growth Rate of Active Infections (Percentage Points)")
# Now: d = 7
# We can't have any NA/NaN/Inf values in y
final.d7 <- final.prepped %>%
filter(!is.na(y7) & !is.nan(y7) & !is.infinite(y7)) %>%
filter(date <= as.Date("04-30-2020", "%m-%d-%Y")) %>%
select(state_code, date, y7, x, days_since)
# Run regression
model.2 <- plm(y7 ~ x,
data = final.d7,
index = c("state_code", "date"),
model = "within",
effect = "twoways")
# Cluster SEs on state and make significance labels
model.2.coef <- tidy(coeftest(model.2, vcov=vcovHC(model.2, type="sss", cluster="group"))) %>%
mutate(significance = ' ',
significance = ifelse(abs(estimate/std.error) >= qnorm(0.95), '.', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.975), '*', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.995), '**', significance))
# Report coefs and SEs
model.2.coef %>%
mutate(day = as.numeric(str_sub(term, start=2L))) %>%
filter(day > -2) %>%
select(-day)
#############################################################
### REPEAT FOR NYT CASE DATA
final.d7.nyt <- final.prepped %>%
filter(!is.na(nyt.y7) & !is.nan(nyt.y7) & !is.infinite(nyt.y7)) %>%
filter(date <= as.Date("04-30-2020", "%m-%d-%Y")) %>%
select(state_code, date, nyt.y7, x)
# Run regression
model.2.nyt <- plm(nyt.y7 ~ x,
data = final.d7.nyt,
index = c("state_code", "date"),
model = "within",
effect = "twoways")
# Cluster SEs on state and make significance labels
model.2.nyt.coef <- tidy(coeftest(model.2.nyt, vcov=vcovHC(model.2.nyt, type="sss", cluster="group"))) %>%
mutate(significance = ' ',
significance = ifelse(abs(estimate/std.error) >= qnorm(0.95), '.', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.975), '*', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.995), '**', significance))
# Report coefs and SEs
model.2.nyt.coef %>%
mutate(day = as.numeric(str_sub(term, start=2L))) %>%
filter(day > -2) %>%
select(-day)
# Now: d = 21
# We can't have any NA/NaN/Inf values in y
final.d21 <- final.prepped %>%
filter(!is.na(y21) & !is.nan(y21) & !is.infinite(y21)) %>%
filter(date <= as.Date("04-30-2020", "%m-%d-%Y")) %>%
select(state_code, date, y21, x)
# Run regression
model.3 <- plm(y21 ~ x,
data = final.d21,
index = c("state_code", "date"),
model = "within",
effect = "twoways")
# Cluster SEs on state and make significance labels
model.3.coef <- tidy(coeftest(model.3, vcov=vcovHC(model.3, type="sss", cluster="group"))) %>%
mutate(significance = ' ',
significance = ifelse(abs(estimate/std.error) >= qnorm(0.95), '.', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.975), '*', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.995), '**', significance))
# Report coefs and SEs
model.3.coef %>%
mutate(day = as.numeric(str_sub(term, start=2L))) %>%
filter(day > -2) %>%
select(-day)
#############################################################
### REPEAT FOR NYT CASE DATA
final.d21.nyt <- final.prepped %>%
filter(!is.na(nyt.y21) & !is.nan(nyt.y21) & !is.infinite(nyt.y21)) %>%
filter(date <= as.Date("04-30-2020", "%m-%d-%Y")) %>%
select(state_code, date, nyt.y21, x)
# Run regression
model.3.nyt <- plm(nyt.y21 ~ x,
data = final.d21.nyt,
index = c("state_code", "date"),
model = "within",
effect = "twoways")
# Cluster SEs on state and make significance labels
model.3.nyt.coef <- tidy(coeftest(model.3.nyt, vcov=vcovHC(model.3.nyt, type="sss", cluster="group"))) %>%
mutate(significance = ' ',
significance = ifelse(abs(estimate/std.error) >= qnorm(0.95), '.', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.975), '*', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.995), '**', significance))
# Report coefs and SEs
model.3.nyt.coef %>%
mutate(day = as.numeric(str_sub(term, start=2L))) %>%
filter(day > -2) %>%
select(-day)
# Finally, d = 14 with control for daily % increase in test capacity
# We can't have any NA/NaN/Inf values in y
final.d14.tests <- final.prepped %>%
filter(!is.na(y14) & !is.nan(y14) & !is.infinite(y14)) %>%
filter(!is.na(daily_test_increase) & !is.nan(daily_test_increase) & !is.infinite(daily_test_increase)) %>%
filter(date <= as.Date("04-30-2020", "%m-%d-%Y")) %>%
select(state_code, date, y14, x, daily_test_increase)
# Run regression
model.4 <- plm(y14 ~ x + daily_test_increase,
data = final.d14.tests,
index = c("state_code", "date"),
model = "within",
effect = "twoways")
# Cluster SEs on state and make significance labels
model.4.coef <- tidy(coeftest(model.4, vcov=vcovHC(model.4, type="sss", cluster="group"))) %>%
mutate(significance = ' ',
significance = ifelse(abs(estimate/std.error) >= qnorm(0.95), '.', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.975), '*', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.995), '**', significance))
# Report coefs and SEs
model.4.coef %>%
mutate(day = as.numeric(str_sub(term, start=2L))) %>%
filter(day > -2) %>%
select(-day)
#############################################################
### REPEAT FOR NYT CASE DATA
final.d14.nyt.tests <- final.prepped %>%
filter(!is.na(nyt.y14) & !is.nan(nyt.y14) & !is.infinite(nyt.y14)) %>%
filter(!is.na(daily_test_increase) & !is.nan(daily_test_increase) & !is.infinite(daily_test_increase)) %>%
filter(date <= as.Date("04-30-2020", "%m-%d-%Y")) %>%
select(state_code, date, nyt.y14, x, daily_test_increase)
# Run regression
model.4.nyt <- plm(nyt.y14 ~ x,
data = final.d14.nyt.tests,
index = c("state_code", "date"),
model = "within",
effect = "twoways")
# Cluster SEs on state and make significance labels
model.4.nyt.coef <- tidy(coeftest(model.4.nyt, vcov=vcovHC(model.4.nyt, type="sss", cluster="group"))) %>%
mutate(significance = ' ',
significance = ifelse(abs(estimate/std.error) >= qnorm(0.95), '.', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.975), '*', significance),
significance = ifelse(abs(estimate/std.error) >= qnorm(0.995), '**', significance))
# Report coefs and SEs
model.4.nyt.coef %>%
mutate(day = as.numeric(str_sub(term, start=2L))) %>%
filter(day > -2) %>%
select(-day)
knitr::opts_chunk$set(echo = TRUE, rows.print=40)
library(stargazer)
library(lubridate)
library(plm)
library(lmtest)
library(broom)
library(tidyverse) # Load tidyverse last so lag isn't masked
# Report coefs and SEs
model.2.nyt.coef %>%
mutate(day = as.numeric(str_sub(term, start=2L))) %>%
filter(day > -2) %>%
select(-day) %>%
kable()
# Report coefs and SEs
model.2.nyt.coef %>%
mutate(day = as.numeric(str_sub(term, start=2L))) %>%
filter(day > -2) %>%
select(-day) %>%
knitr::kable(.)
knitr::opts_chunk$set(echo = TRUE)
library(stargazer)
library(lubridate)
library(plm)
library(lmtest)
library(broom)
library(lfe)
library(tidyverse) # Load tidyverse last so lag isn't masked
rm(list=ls())
sip.cases <- read_csv("../Intermediate/sip_cases_county_5-20.csv",
col_types = cols(county_sip_start_date = col_date(format=""),
county_sip_end_date = col_date(format="")))
sip.only <- sip.cases %>%
arrange(state_code, county_code, date) %>%
group_by(state_code, county_code) %>%
# There are some observations where the cumulative case count goes down the day after - fix these
# This code takes days where the case count goes up then down and removes the erroneously *high*
# case counts - if a county's cases goes 25 -> 26 -> 25, this will smooth out to 25 -> 25 -> 25
# mutate(lag1 = dplyr::lag(cases,n=1L),
#       cases = ifelse(lag1 > cases, lag1, cases)) %>%
# Filter to include only observations where there is a SIP order (i.e. start_date is not NA)
filter(!is.na(state_sip_start_date) | !is.na(county_sip_start_date)) %>%
# Calculate effective start date as the earlier of the county and state start dates
mutate(state_sip_start_date = ifelse(is.na(state_sip_start_date), Inf, state_sip_start_date),
county_sip_start_date = ifelse(is.na(county_sip_start_date), Inf, county_sip_start_date),
effective_date = ifelse(county_sip_start_date < state_sip_start_date,
county_sip_start_date, state_sip_start_date)) %>%
# Convert back to datetype columns
mutate(state_sip_start_date = as_date(state_sip_start_date),
county_sip_start_date = as_date(county_sip_start_date),
effective_date = as_date(effective_date)) %>%
# Calculate days since SIP start date for the county
mutate(days_since = date - effective_date,
days_since_state = date - state_sip_start_date,
days_since_county = date - county_sip_start_date,
cases_yesterday = dplyr::lag(cases, n = 1L),
case_growth = cases - cases_yesterday,
case_growth_pc_mil = 1000000*(case_growth / popestimate2019)) %>%
# Calculate main FHLO depvar: d=14 daily active infection rate
mutate(lag1 = dplyr::lag(cases,n=1L),
lag14 = dplyr::lag(cases,n=14L),
lag15 = dplyr::lag(cases,n=15L),
# The updated NYT data has cumulative cases decreasing on some days due to data corrections.
# To prevent the dependent variable from ever being infinite, we'll calculate it the same way
# FHLO do, but make sure the denominator (cases yesterday minus cases 15 days ago) is always
# at least 1.
fowler_growth = ifelse(lag1-lag15<=0,
100*((cases-lag14)-(lag1-lag15)) / 1,
100*((cases-lag14)-(lag1-lag15)) / (lag1-lag15+1))) %>%
ungroup()
# Attempt to replicate FHLO figure 2
# Figure 2B: including only counties with a stay-at-home order
sip.only %>%
group_by(days_since) %>%
summarize(growth_rate = mean(fowler_growth, na.rm=TRUE)) %>%
ungroup() %>%
filter(days_since >= -35 & days_since <= 35) %>%
ggplot(.) +
geom_point(mapping=aes(x=days_since, y=growth_rate), color="darkorange") +
stat_smooth(mapping=aes(x=days_since, y=growth_rate),
geom="smooth", se=TRUE, span=.5, color="blue") +
geom_vline(xintercept=0, linetype="dashed")
# Create dummies for 2 weeks before and 4 weeks after
cb.dataset <- sip.only
for (i in 14:1){
cb.dataset[[paste0("pre_sip_", i)]] <- with(cb.dataset, ifelse(days_since_state==-1*i, 1, 0))
}
for (i in 0:28) {
cb.dataset[[paste0("post_sip_", i)]] <- with(cb.dataset, ifelse(days_since_state==i, 1, 0))
}
cb.dataset <- cb.dataset %>%
mutate(fipsno = paste0(state_code, county_code)) %>%
group_by(fipsno)
for (i in 1:7) {
cb.dataset[[paste0("lag_fg_", i)]] <- with(cb.dataset, dplyr::lag(fowler_growth, n=i))
}
cb.dataset <- cb.dataset %>% ungroup()
# Plain vanilla diff-in-diff
model1 <- plm(fowler_growth ~ state_sip,
data = subset(cb.dataset, days_since_state >= -14, days_since_state <= 28),
index = c("fipsno", "date"),
model = "within",
effect = "twoways")
coeftest(model1, vcov = vcovHC, type = "HC1")
# Add lags of dependent variable
model2 <- plm(fowler_growth ~ state_sip + lag_fg_1,
data = subset(cb.dataset, days_since_state >= -14 & days_since_state <= 28),
index = c("fipsno", "date"),
model = "within",
effect = "twoways")
coeftest(model2, vcov = vcovHC, type = "HC1")
# Add all depvar lagas
model3 <- plm(fowler_growth ~ state_sip + lag_fg_1 + lag_fg_2 + lag_fg_3 +
lag_fg_4 + lag_fg_5 + lag_fg_6 + lag_fg_7,
data = subset(cb.dataset, days_since_state >= -14 & days_since_state <= 28),
index = c("fipsno", "date"),
model = "within",
effect = "twoways")
coeftest(model3, vcov = vcovHC, type = "HC1")
# Attempt to replicate FHLO figure 2
# Figure 2B: including only counties with a stay-at-home order
sip.only %>%
group_by(days_since) %>%
summarize(growth_rate = mean(fowler_growth, na.rm=TRUE)) %>%
ungroup() %>%
filter(days_since >= -35 & days_since <= 35) %>%
ggplot(.) +
geom_point(mapping=aes(x=days_since, y=growth_rate), color="darkorange") +
stat_smooth(mapping=aes(x=days_since, y=growth_rate),
geom="smooth", se=TRUE, span=.5, color="blue") +
geom_vline(xintercept=0, linetype="dashed") +
labs(x="Days since stay-at-home order effective date (county)",
y="Mean daily active infection rate",
title="Fowler Figure 2B replication")
# Attempt to replicate FHLO figure 2
# Figure 2B: including only counties with a stay-at-home order
sip.only %>%
group_by(days_since) %>%
summarize(growth_rate = mean(fowler_growth, na.rm=TRUE)) %>%
ungroup() %>%
filter(days_since >= -25 & days_since <= 25) %>%
ggplot(.) +
geom_point(mapping=aes(x=days_since, y=growth_rate), color="darkorange") +
stat_smooth(mapping=aes(x=days_since, y=growth_rate),
geom="smooth", se=TRUE, span=.5, color="blue") +
geom_vline(xintercept=0, linetype="dashed") +
labs(x="Days since stay-at-home order effective date (county)",
y="Mean daily active infection rate",
title="Fowler Figure 2B replication")
names(cb.dataset)
# Event study
model4 <- plm(fowler_growth ~ state_sip + pre_sip_14 + pre_sip_13 + pre_sip_12 + pre_sip_11 +
pre_sip_10 + pre_sip_9 + pre_sip_8 + pre_sip_7 + pre_sip_6 + pre_sip_5 +
pre_sip_4 + pre_sip_3 + pre_sip_2 + pre_sip_1 + post_sip_0 + post_sip_1 +
post_sip_2 + post_sip_3 + post_sip_4 + post_sip_5 + post_sip_6 + post_sip_7 +
post_sip_8 + post_sip_9 + post_sip_10 + post_sip_11 + post_sip_12 + post_sip_13 +
post_sip_14 + post_sip_15 + post_sip_16 + post_sip_17 + post_sip_18 + post_sip_19 +
post_sip_20 + post_sip_21 + post_sip_22 + post_sip_23 + post_sip_24 + post_sip_25 +
post_sip_26 + post_sip_27 + post_sip_28,
data = subset(cb.dataset, days_since_state >= -14 & days_since_state <= 28),
index = c("fipsno", "date"),
model = "within",
effect = "twoways")
coeftest(model4, vcov = vcovHC, type = "HC1")
# Event study
model4 <- plm(fowler_growth ~ state_sip + pre_sip_14 + pre_sip_13 + pre_sip_12 + pre_sip_11 +
pre_sip_10 + pre_sip_9 + pre_sip_8 + pre_sip_7 + pre_sip_6 + pre_sip_5 +
pre_sip_4 + pre_sip_3 + pre_sip_2 + post_sip_0 + post_sip_1 +
post_sip_2 + post_sip_3 + post_sip_4 + post_sip_5 + post_sip_6 + post_sip_7 +
post_sip_8 + post_sip_9 + post_sip_10 + post_sip_11 + post_sip_12 + post_sip_13 +
post_sip_14 + post_sip_15 + post_sip_16 + post_sip_17 + post_sip_18 + post_sip_19 +
post_sip_20 + post_sip_21 + post_sip_22 + post_sip_23 + post_sip_24 + post_sip_25 +
post_sip_26 + post_sip_27 + post_sip_28,
data = subset(cb.dataset, days_since_state >= -14 & days_since_state <= 28),
index = c("fipsno", "date"),
model = "within",
effect = "twoways")
coeftest(model4, vcov = vcovHC, type = "HC1")
Sys.Date()
class(Sys.Date())
today <- str_sub(Sys.Date(), start = 2L)
###################################################
# nyt.R
# Script for downloading NYT cases and deaths data
###################################################
library(tidyverse)
today <- str_sub(Sys.Date(), start = 2L)
today
counties <- read_csv("raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv")
counties <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv")
today <- str_sub(Sys.Date(), start = 6L)
excess.deaths <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/excess-deaths/deaths.csv")
problems(excess.deaths)
today <- str_sub(Sys.Date(), start = 6L)
counties <- read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv")
prior.county.name <- paste0("nyt-us-counties-", today, ".csv")
county.name <- "nyt-us-counties.csv"
write.csv(counties, paste0("../../../../data/raw/cases-deaths/nyt/", county.name), row.names=FALSE)
getwd()
library(tidyverse)
tammy <- read_csv("C:/Users/Alec/Documents/Academics/Second Year/Spring Quarter/CAPP 30255 - Advanced ML for PP/Project/twitter-mobility-predictor/Data")
setwdd("C:/Users/Alec/Documents/Academics/Second Year/Spring Quarter/CAPP 30255 - Advanced ML for PP/Project/twitter-mobility-predictor/Data")
setwd("C:/Users/Alec/Documents/Academics/Second Year/Spring Quarter/CAPP 30255 - Advanced ML for PP/Project/twitter-mobility-predictor/Data")
tammy <- read_csv("school_mobility_county.csv")
alec <- read_csv("C:/Users/Alec/Documents/Academics/Second Year/Spring Quarter/PPHA 52000 - Supervised Research/covid-research/data/processed/allcott/social-distancing/illinois_social_distancing_build_daily.csv.gz")
names(alec)
names(tammy)
View(alec)
View(tammy)
class(alec$county_fips)
class(tammy$county_fips)
class(tammy$date)
class(alec$date)
merp <- alec %>%
inner_join(tammy, by=c("county_fips", "date"))
View(merp)
sum(!is.na(merp$grade_total))
write_csv(merp, "C:/Users/Alec/Documents/Academics/Second Year/Spring Quarter/CAPP 30255 - Advanced ML for PP/Project/twitter-mobility-predictor/Data/merged_features_outcomes.csv")
